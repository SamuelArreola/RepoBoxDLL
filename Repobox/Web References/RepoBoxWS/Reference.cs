//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RepoBox.RepoBoxWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TimbradoPortBinding", Namespace="timbrado.ws.pade.mx")]
    public partial class TimbradoService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback cancelarOperationCompleted;
        
        private System.Threading.SendOrPostCallback timbradoOperationCompleted;
        
        private System.Threading.SendOrPostCallback timbradoPruebaOperationCompleted;
        
        private System.Threading.SendOrPostCallback cfdiPorUUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback acuseReciboOperationCompleted;
        
        private System.Threading.SendOrPostCallback acuseCancelacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelarConOpcionesOperationCompleted;
        
        private System.Threading.SendOrPostCallback timbradoPruebaConOpcionesOperationCompleted;
        
        private System.Threading.SendOrPostCallback timbradoConOpcionesOperationCompleted;
        
        private System.Threading.SendOrPostCallback statusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TimbradoService() {
            this.Url = global::RepoBox.Properties.Settings.Default.Repobox_PRODIGIA_TimbradoService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event cancelarCompletedEventHandler cancelarCompleted;
        
        /// <remarks/>
        public event timbradoCompletedEventHandler timbradoCompleted;
        
        /// <remarks/>
        public event timbradoPruebaCompletedEventHandler timbradoPruebaCompleted;
        
        /// <remarks/>
        public event cfdiPorUUIDCompletedEventHandler cfdiPorUUIDCompleted;
        
        /// <remarks/>
        public event acuseReciboCompletedEventHandler acuseReciboCompleted;
        
        /// <remarks/>
        public event acuseCancelacionCompletedEventHandler acuseCancelacionCompleted;
        
        /// <remarks/>
        public event cancelarConOpcionesCompletedEventHandler cancelarConOpcionesCompleted;
        
        /// <remarks/>
        public event timbradoPruebaConOpcionesCompletedEventHandler timbradoPruebaConOpcionesCompleted;
        
        /// <remarks/>
        public event timbradoConOpcionesCompletedEventHandler timbradoConOpcionesCompleted;
        
        /// <remarks/>
        public event statusCompletedEventHandler statusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="timbrado.ws.pade.mx", ResponseNamespace="timbrado.ws.pade.mx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cancelar([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contrato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rfcEmisor, [System.Xml.Serialization.XmlElementAttribute("arregloUUID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] arregloUUID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] cert, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] key, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string keyPass) {
            object[] results = this.Invoke("cancelar", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        rfcEmisor,
                        arregloUUID,
                        cert,
                        key,
                        keyPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelarAsync(string contrato, string usuario, string passwd, string rfcEmisor, string[] arregloUUID, byte[] cert, byte[] key, string keyPass) {
            this.cancelarAsync(contrato, usuario, passwd, rfcEmisor, arregloUUID, cert, key, keyPass, null);
        }
        
        /// <remarks/>
        public void cancelarAsync(string contrato, string usuario, string passwd, string rfcEmisor, string[] arregloUUID, byte[] cert, byte[] key, string keyPass, object userState) {
            if ((this.cancelarOperationCompleted == null)) {
                this.cancelarOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelarOperationCompleted);
            }
            this.InvokeAsync("cancelar", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        rfcEmisor,
                        arregloUUID,
                        cert,
                        key,
                        keyPass}, this.cancelarOperationCompleted, userState);
        }
        
        private void OncancelarOperationCompleted(object arg) {
            if ((this.cancelarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelarCompleted(this, new cancelarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="timbrado.ws.pade.mx", ResponseNamespace="timbrado.ws.pade.mx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timbrado([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contrato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cfdiXml) {
            object[] results = this.Invoke("timbrado", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        cfdiXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void timbradoAsync(string contrato, string usuario, string passwd, string cfdiXml) {
            this.timbradoAsync(contrato, usuario, passwd, cfdiXml, null);
        }
        
        /// <remarks/>
        public void timbradoAsync(string contrato, string usuario, string passwd, string cfdiXml, object userState) {
            if ((this.timbradoOperationCompleted == null)) {
                this.timbradoOperationCompleted = new System.Threading.SendOrPostCallback(this.OntimbradoOperationCompleted);
            }
            this.InvokeAsync("timbrado", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        cfdiXml}, this.timbradoOperationCompleted, userState);
        }
        
        private void OntimbradoOperationCompleted(object arg) {
            if ((this.timbradoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.timbradoCompleted(this, new timbradoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="timbrado.ws.pade.mx", ResponseNamespace="timbrado.ws.pade.mx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timbradoPrueba([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contrato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cfdiXml) {
            object[] results = this.Invoke("timbradoPrueba", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        cfdiXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void timbradoPruebaAsync(string contrato, string usuario, string passwd, string cfdiXml) {
            this.timbradoPruebaAsync(contrato, usuario, passwd, cfdiXml, null);
        }
        
        /// <remarks/>
        public void timbradoPruebaAsync(string contrato, string usuario, string passwd, string cfdiXml, object userState) {
            if ((this.timbradoPruebaOperationCompleted == null)) {
                this.timbradoPruebaOperationCompleted = new System.Threading.SendOrPostCallback(this.OntimbradoPruebaOperationCompleted);
            }
            this.InvokeAsync("timbradoPrueba", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        cfdiXml}, this.timbradoPruebaOperationCompleted, userState);
        }
        
        private void OntimbradoPruebaOperationCompleted(object arg) {
            if ((this.timbradoPruebaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.timbradoPruebaCompleted(this, new timbradoPruebaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="timbrado.ws.pade.mx", ResponseNamespace="timbrado.ws.pade.mx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cfdiPorUUID([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contrato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid) {
            object[] results = this.Invoke("cfdiPorUUID", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        uuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cfdiPorUUIDAsync(string contrato, string usuario, string passwd, string uuid) {
            this.cfdiPorUUIDAsync(contrato, usuario, passwd, uuid, null);
        }
        
        /// <remarks/>
        public void cfdiPorUUIDAsync(string contrato, string usuario, string passwd, string uuid, object userState) {
            if ((this.cfdiPorUUIDOperationCompleted == null)) {
                this.cfdiPorUUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OncfdiPorUUIDOperationCompleted);
            }
            this.InvokeAsync("cfdiPorUUID", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        uuid}, this.cfdiPorUUIDOperationCompleted, userState);
        }
        
        private void OncfdiPorUUIDOperationCompleted(object arg) {
            if ((this.cfdiPorUUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cfdiPorUUIDCompleted(this, new cfdiPorUUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="timbrado.ws.pade.mx", ResponseNamespace="timbrado.ws.pade.mx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string acuseRecibo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contrato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid) {
            object[] results = this.Invoke("acuseRecibo", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        uuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void acuseReciboAsync(string contrato, string usuario, string passwd, string uuid) {
            this.acuseReciboAsync(contrato, usuario, passwd, uuid, null);
        }
        
        /// <remarks/>
        public void acuseReciboAsync(string contrato, string usuario, string passwd, string uuid, object userState) {
            if ((this.acuseReciboOperationCompleted == null)) {
                this.acuseReciboOperationCompleted = new System.Threading.SendOrPostCallback(this.OnacuseReciboOperationCompleted);
            }
            this.InvokeAsync("acuseRecibo", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        uuid}, this.acuseReciboOperationCompleted, userState);
        }
        
        private void OnacuseReciboOperationCompleted(object arg) {
            if ((this.acuseReciboCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.acuseReciboCompleted(this, new acuseReciboCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="timbrado.ws.pade.mx", ResponseNamespace="timbrado.ws.pade.mx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string acuseCancelacion([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contrato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid) {
            object[] results = this.Invoke("acuseCancelacion", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        uuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void acuseCancelacionAsync(string contrato, string usuario, string passwd, string uuid) {
            this.acuseCancelacionAsync(contrato, usuario, passwd, uuid, null);
        }
        
        /// <remarks/>
        public void acuseCancelacionAsync(string contrato, string usuario, string passwd, string uuid, object userState) {
            if ((this.acuseCancelacionOperationCompleted == null)) {
                this.acuseCancelacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnacuseCancelacionOperationCompleted);
            }
            this.InvokeAsync("acuseCancelacion", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        uuid}, this.acuseCancelacionOperationCompleted, userState);
        }
        
        private void OnacuseCancelacionOperationCompleted(object arg) {
            if ((this.acuseCancelacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.acuseCancelacionCompleted(this, new acuseCancelacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="timbrado.ws.pade.mx", ResponseNamespace="timbrado.ws.pade.mx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cancelarConOpciones([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contrato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rfcEmisor, [System.Xml.Serialization.XmlElementAttribute("arregloUUID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] arregloUUID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] cert, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] key, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string keyPass, [System.Xml.Serialization.XmlElementAttribute("opciones", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] opciones) {
            object[] results = this.Invoke("cancelarConOpciones", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        rfcEmisor,
                        arregloUUID,
                        cert,
                        key,
                        keyPass,
                        opciones});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelarConOpcionesAsync(string contrato, string usuario, string passwd, string rfcEmisor, string[] arregloUUID, byte[] cert, byte[] key, string keyPass, string[] opciones) {
            this.cancelarConOpcionesAsync(contrato, usuario, passwd, rfcEmisor, arregloUUID, cert, key, keyPass, opciones, null);
        }
        
        /// <remarks/>
        public void cancelarConOpcionesAsync(string contrato, string usuario, string passwd, string rfcEmisor, string[] arregloUUID, byte[] cert, byte[] key, string keyPass, string[] opciones, object userState) {
            if ((this.cancelarConOpcionesOperationCompleted == null)) {
                this.cancelarConOpcionesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelarConOpcionesOperationCompleted);
            }
            this.InvokeAsync("cancelarConOpciones", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        rfcEmisor,
                        arregloUUID,
                        cert,
                        key,
                        keyPass,
                        opciones}, this.cancelarConOpcionesOperationCompleted, userState);
        }
        
        private void OncancelarConOpcionesOperationCompleted(object arg) {
            if ((this.cancelarConOpcionesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelarConOpcionesCompleted(this, new cancelarConOpcionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="timbrado.ws.pade.mx", ResponseNamespace="timbrado.ws.pade.mx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timbradoPruebaConOpciones([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contrato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cfdiXml, [System.Xml.Serialization.XmlElementAttribute("opciones", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] opciones) {
            object[] results = this.Invoke("timbradoPruebaConOpciones", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        cfdiXml,
                        opciones});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void timbradoPruebaConOpcionesAsync(string contrato, string usuario, string passwd, string cfdiXml, string[] opciones) {
            this.timbradoPruebaConOpcionesAsync(contrato, usuario, passwd, cfdiXml, opciones, null);
        }
        
        /// <remarks/>
        public void timbradoPruebaConOpcionesAsync(string contrato, string usuario, string passwd, string cfdiXml, string[] opciones, object userState) {
            if ((this.timbradoPruebaConOpcionesOperationCompleted == null)) {
                this.timbradoPruebaConOpcionesOperationCompleted = new System.Threading.SendOrPostCallback(this.OntimbradoPruebaConOpcionesOperationCompleted);
            }
            this.InvokeAsync("timbradoPruebaConOpciones", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        cfdiXml,
                        opciones}, this.timbradoPruebaConOpcionesOperationCompleted, userState);
        }
        
        private void OntimbradoPruebaConOpcionesOperationCompleted(object arg) {
            if ((this.timbradoPruebaConOpcionesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.timbradoPruebaConOpcionesCompleted(this, new timbradoPruebaConOpcionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="timbrado.ws.pade.mx", ResponseNamespace="timbrado.ws.pade.mx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timbradoConOpciones([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contrato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cfdiXml, [System.Xml.Serialization.XmlElementAttribute("opciones", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] opciones) {
            object[] results = this.Invoke("timbradoConOpciones", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        cfdiXml,
                        opciones});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void timbradoConOpcionesAsync(string contrato, string usuario, string passwd, string cfdiXml, string[] opciones) {
            this.timbradoConOpcionesAsync(contrato, usuario, passwd, cfdiXml, opciones, null);
        }
        
        /// <remarks/>
        public void timbradoConOpcionesAsync(string contrato, string usuario, string passwd, string cfdiXml, string[] opciones, object userState) {
            if ((this.timbradoConOpcionesOperationCompleted == null)) {
                this.timbradoConOpcionesOperationCompleted = new System.Threading.SendOrPostCallback(this.OntimbradoConOpcionesOperationCompleted);
            }
            this.InvokeAsync("timbradoConOpciones", new object[] {
                        contrato,
                        usuario,
                        passwd,
                        cfdiXml,
                        opciones}, this.timbradoConOpcionesOperationCompleted, userState);
        }
        
        private void OntimbradoConOpcionesOperationCompleted(object arg) {
            if ((this.timbradoConOpcionesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.timbradoConOpcionesCompleted(this, new timbradoConOpcionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="timbrado.ws.pade.mx", ResponseNamespace="timbrado.ws.pade.mx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contrato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passwd) {
            object[] results = this.Invoke("status", new object[] {
                        contrato,
                        usuario,
                        passwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void statusAsync(string contrato, string usuario, string passwd) {
            this.statusAsync(contrato, usuario, passwd, null);
        }
        
        /// <remarks/>
        public void statusAsync(string contrato, string usuario, string passwd, object userState) {
            if ((this.statusOperationCompleted == null)) {
                this.statusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstatusOperationCompleted);
            }
            this.InvokeAsync("status", new object[] {
                        contrato,
                        usuario,
                        passwd}, this.statusOperationCompleted, userState);
        }
        
        private void OnstatusOperationCompleted(object arg) {
            if ((this.statusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.statusCompleted(this, new statusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void cancelarCompletedEventHandler(object sender, cancelarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void timbradoCompletedEventHandler(object sender, timbradoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class timbradoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal timbradoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void timbradoPruebaCompletedEventHandler(object sender, timbradoPruebaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class timbradoPruebaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal timbradoPruebaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void cfdiPorUUIDCompletedEventHandler(object sender, cfdiPorUUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cfdiPorUUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cfdiPorUUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void acuseReciboCompletedEventHandler(object sender, acuseReciboCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class acuseReciboCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal acuseReciboCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void acuseCancelacionCompletedEventHandler(object sender, acuseCancelacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class acuseCancelacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal acuseCancelacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void cancelarConOpcionesCompletedEventHandler(object sender, cancelarConOpcionesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelarConOpcionesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelarConOpcionesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void timbradoPruebaConOpcionesCompletedEventHandler(object sender, timbradoPruebaConOpcionesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class timbradoPruebaConOpcionesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal timbradoPruebaConOpcionesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void timbradoConOpcionesCompletedEventHandler(object sender, timbradoConOpcionesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class timbradoConOpcionesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal timbradoConOpcionesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void statusCompletedEventHandler(object sender, statusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class statusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal statusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591